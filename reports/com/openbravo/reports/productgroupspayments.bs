//    Openbravo POS is a point of sales application designed for touch screens.
//    Copyright (C) 2007-2009 Openbravo, S.L.
//    http://www.openbravo.com/product/pos
//
//    This file is part of Openbravo POS.
//
//    Openbravo POS is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    Openbravo POS is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with Openbravo POS.  If not, see <http://www.gnu.org/licenses/>.

report = new com.openbravo.pos.reports.PanelReportBean();

report.setTitleKey("Menu.Sales.Reports.ProductGroupsPayments");
report.setReport("/com/openbravo/reports/productgroupspayments");
report.setResourceBundle("com/openbravo/reports/productgroupspayments_messages");

report.setSentence("select  " +
"	coalesce(cpp.NAME, cp.NAME, c.NAME) as CategoryName, " +
"	case when pay.PAYMENT='cash' then 'Bar' when pay.PAYMENT='free' then 'Frei/Gratis' when pay.PAYMENT='cashrefund' then 'Bar' when pay.PAYMENT='magcard' then 'Karte' when pay.PAYMENT='magcardrefund' then 'Karte' when pay.PAYMENT='paperin' then 'Rechnung' when pay.PAYMENT='paperout' then 'Rechnung' else pay.PAYMENT end as Payment, " +
"	SUM(Round(tl.UNITS * tl.PRICE * (1+ta.RATE),2)) as PaymentTotal " +
"from  " +
"CLOSEDCASH cc " +
"inner join  " +
"	(select * from RECEIPTS UNION ALL select * from BRANCH_RECEIPTS) r " +
"	on cc.MONEY=r.MONEY " +
"inner join " +
"	(select * from TICKETS UNION ALL select * from BRANCH_TICKETS) t " +
"	on r.ID=t.ID " +
"inner join " +
"	(select * from TICKETLINES UNION ALL select * from BRANCH_TICKETLINES) tl " +
"	on t.id=tl.TICKET " +
"left join " +
"	(select * from PAYMENTS UNION ALL select * from BRANCH_PAYMENTS) pay " +
"	on r.ID = pay.RECEIPT " +
"inner join " +
"	Products p " +
"	on tl.PRODUCT=p.ID " +
"inner join " +
"	Categories c " +
"	on p.CATEGORY=c.ID " +
"left join " +
"	Categories cp " +
"	on c.PARENTID=cp.ID " +
"left join " +
"	Categories cpp " +
"	on cp.PARENTID=cpp.ID " +
"inner join " +
"	Taxes ta " +
"	on ta.id=tl.TAXID " +
" where ?(QBF_FILTER) " +
"group by coalesce(cpp.NAME, cp.NAME, c.NAME), case when pay.PAYMENT='cash' then 'Bar' when pay.PAYMENT='free' then 'Frei/Gratis' when pay.PAYMENT='cashrefund' then 'Bar' when pay.PAYMENT='magcard' then 'Karte' when pay.PAYMENT='magcardrefund' then 'Karte' when pay.PAYMENT='paperin' then 'Rechnung' when pay.PAYMENT='paperout' then 'Rechnung' else pay.PAYMENT end " +
"order by coalesce(cpp.NAME, cp.NAME, c.NAME), case when pay.PAYMENT='cash' then 'Bar' when pay.PAYMENT='free' then 'Frei/Gratis' when pay.PAYMENT='cashrefund' then 'Bar' when pay.PAYMENT='magcard' then 'Karte' when pay.PAYMENT='magcardrefund' then 'Karte' when pay.PAYMENT='paperin' then 'Rechnung' when pay.PAYMENT='paperout' then 'Rechnung' else pay.PAYMENT end "
);

report.addParameter("cc.HOSTSEQUENCE");
report.addParameter("cc.HOSTSEQUENCE");
com.openbravo.pos.reports.JParamsClosedPosInterval filter = new com.openbravo.pos.reports.JParamsClosedPosInterval();
report.addQBFFilter(filter);

report.addField("CategoryName", com.openbravo.data.loader.Datas.STRING);
report.addField("Payment", com.openbravo.data.loader.Datas.STRING);
report.addField("PaymentTotal", com.openbravo.data.loader.Datas.DOUBLE);

report;

