//    Openbravo POS is a point of sales application designed for touch screens.
//    Copyright (C) 2007-2009 Openbravo, S.L.
//    http://www.openbravo.com/product/pos
//
//    This file is part of Openbravo POS.
//
//    Openbravo POS is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    Openbravo POS is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with Openbravo POS.  If not, see <http://www.gnu.org/licenses/>.

package com.openbravo.pos.ticket;

import java.awt.BorderLayout;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.List;

import javax.swing.JComponent;
import javax.swing.JPanel;
import javax.swing.JTextField;

import com.openbravo.basic.BasicException;
import com.openbravo.data.gui.ComboBoxValModel;
import com.openbravo.data.gui.ListQBFModelNumber;
import com.openbravo.data.loader.QBFCompareEnum;
import com.openbravo.data.loader.SentenceList;
import com.openbravo.data.user.EditorCreator;
import com.openbravo.editor.JEditorKeys;
import com.openbravo.editor.JEditorString;
import com.openbravo.pos.forms.AppLocal;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.forms.DataLogicSales;
import com.openbravo.pos.util.PropertyUtil;

public class ProductFilterSales extends javax.swing.JPanel implements EditorCreator {

	private SentenceList m_sentcat;
	private ComboBoxValModel m_CategoryModel;
	private AppView m_App;

	/** Creates new form ProductFilterSales */
	public ProductFilterSales(AppView app, DataLogicSales dlSales) {
		m_App = app;
		initComponents();

		// El modelo de categorias
		m_sentcat = dlSales.getCategoriesList();
		m_CategoryModel = new ComboBoxValModel();

		m_jtxtName.addKeyListener(new KeyListener() {

			@Override
			public void keyTyped(KeyEvent e) {
				JTextField o = (JTextField) e.getSource();
				ProductFilterSales p = (ProductFilterSales)o.getParent().getParent();
				p.processKeyEvent(e);
			}

			@Override
			public void keyReleased(KeyEvent e) {
				JTextField o = (JTextField) e.getSource();
				ProductFilterSales p = (ProductFilterSales)o.getParent().getParent();
				p.processKeyEvent(e);
			}

			@Override
			public void keyPressed(KeyEvent e) {
				JTextField o = (JTextField) e.getSource();
				ProductFilterSales p = (ProductFilterSales)o.getParent().getParent();
				p.processKeyEvent(e);
			}
		});
	}

	public void activate() {

		m_jtxtName.setText("");

		try {
			List catlist = m_sentcat.list();
			catlist.add(0, null);
			m_CategoryModel = new ComboBoxValModel(catlist);
			m_jCategory.setModel(m_CategoryModel);
		} catch (BasicException eD) {
			// no hay validacion
		}
	}

	public Object createValue() throws BasicException {

		Object[] afilter = new Object[4];

		// Nombre
		if (m_jtxtName.getText() == null || m_jtxtName.getText().equals("")) {
			afilter[0] = QBFCompareEnum.COMP_NONE;
			afilter[1] = null;
		} else {
			afilter[0] = QBFCompareEnum.COMP_RE;
			afilter[1] = "%" + m_jtxtName.getText() + "%";
		}

		// Categoria
		if (m_CategoryModel.getSelectedKey() == null) {
			afilter[2] = QBFCompareEnum.COMP_NONE;
			afilter[3] = null;
		} else {
			afilter[2] = QBFCompareEnum.COMP_EQUALS;
			afilter[3] = m_CategoryModel.getSelectedKey();
		}

		return afilter;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jLabel5 = new javax.swing.JLabel();
		m_jtxtName = new javax.swing.JTextField();
		jLabel2 = new javax.swing.JLabel();
		m_jCategory = new javax.swing.JComboBox();
		ScaleButtons();
		setLayout(new BorderLayout());

		JPanel main = new JPanel();

		// setPreferredSize(new java.awt.Dimension(370, 170));
		GridBagLayout layout = new GridBagLayout();
		main.setLayout(layout);
		GridBagConstraints layoutData = new GridBagConstraints();
		layoutData.insets = new Insets(5, 0, 0, 5);

		jLabel5.setText(AppLocal.getIntString("label.prodname")); // NOI18N
		PropertyUtil.setGridBagConstraints(layoutData, 0, 0, GridBagConstraints.BOTH);
		main.add(jLabel5, layoutData);
		PropertyUtil.setGridBagConstraints(layoutData, 1, 0, GridBagConstraints.BOTH, 2);
		main.add(m_jtxtName, layoutData);

		jLabel2.setText(AppLocal.getIntString("label.prodcategory")); // NOI18N
		PropertyUtil.setGridBagConstraints(layoutData, 0, 1, GridBagConstraints.BOTH);
		main.add(jLabel2, layoutData);
		PropertyUtil.setGridBagConstraints(layoutData, 1, 1, GridBagConstraints.BOTH, 2);
		main.add(m_jCategory, layoutData);

		add(main, BorderLayout.CENTER);

	}// </editor-fold>//GEN-END:initComponents

	@Override
	public void ScaleButtons() {
		PropertyUtil.ScaleLabelFontsize(m_App, jLabel2, "common-dialog-fontsize", "22");
		PropertyUtil.ScaleLabelFontsize(m_App, jLabel5, "common-dialog-fontsize", "22");

		PropertyUtil.ScaleComboFontsize(m_App, m_jCategory, "common-dialog-fontsize", "22");
		PropertyUtil.ScaleTextFieldFontsize(m_App, m_jtxtName, "common-dialog-fontsize", "22");
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JComboBox m_jCategory;
	private javax.swing.JTextField m_jtxtName;
	// End of variables declaration//GEN-END:variables

}
