//    Openbravo POS is a point of sales application designed for touch screens.
//    Copyright (C) 2007-2009 Openbravo, S.L.
//    http://www.openbravo.com/product/pos
//
//    This file is part of Openbravo POS.
//
//    Openbravo POS is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    Openbravo POS is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with Openbravo POS.  If not, see <http://www.gnu.org/licenses/>.

package com.openbravo.pos.mant;

import java.awt.Component;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.image.BufferedImage;
import java.util.UUID;
import javax.swing.*;
import com.openbravo.pos.forms.AppLocal;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.util.PropertyUtil;
import com.openbravo.format.Formats;
import com.openbravo.basic.BasicException;
import com.openbravo.data.user.EditorRecord;
import com.openbravo.data.user.BrowsableEditableData;
import com.openbravo.data.user.DirtyManager;

/**
 *
 * @author adrianromero
 */
public class FloorsEditor extends JPanel implements EditorRecord {

	// private DirtyManager m_Dirty = new DirtyManager();
	private String m_sID;
	private AppView m_App;
	private int m_SortOrder;

	/** Creates new form FloorsEditor */
	public FloorsEditor(AppView app, DirtyManager dirty) {
		m_App = app;
		initComponents();

		m_jName.getDocument().addDocumentListener(dirty);
		m_jImage.addPropertyChangeListener("image", dirty);

		writeValueEOF();
		
		ScaleButtons();
	}

	public void writeValueEOF() {

		m_sID = null;
		m_jName.setText(null);
		m_jImage.setImage(null);
		m_SortOrder = 0;

		m_jName.setEnabled(false);
		m_jImage.setEnabled(false);
	}

	public void writeValueInsert() {

		m_sID = UUID.randomUUID().toString();
		m_jName.setText(null);
		m_jImage.setImage(null);
		m_SortOrder = 0;

		m_jName.setEnabled(true);
		m_jImage.setEnabled(true);
	}

	public void writeValueDelete(Object value) {

		Object[] floor = (Object[]) value;
		m_sID = Formats.STRING.formatValue(floor[0]);
		m_jName.setText(Formats.STRING.formatValue(floor[1]));
		m_jImage.setImage((BufferedImage) floor[2]);
		m_SortOrder = (int)(floor[3] == null ? 0 : floor[3]);
		m_jName.setEnabled(false);
		m_jImage.setEnabled(false);
	}

	public void writeValueEdit(Object value) {

		Object[] floor = (Object[]) value;
		m_sID = Formats.STRING.formatValue(floor[0]);
		m_jName.setText(Formats.STRING.formatValue(floor[1]));
		m_jImage.setImage((BufferedImage) floor[2]);
		m_SortOrder = (int)(floor[3] == null ? 0 : floor[3]);
		m_jName.setEnabled(true);
		m_jImage.setEnabled(true);
	}

	public Object createValue() throws BasicException {

		Object[] floor = new Object[4];

		floor[0] = m_sID;
		floor[1] = m_jName.getText();
		floor[2] = m_jImage.getImage();
		floor[3] = m_SortOrder;
		return floor;
	}

	public Component getComponent() {
		return this;
	}

	public void refresh() {
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jLabel3 = new javax.swing.JLabel();
		m_jName = new javax.swing.JTextField();
		jPanel3 = new javax.swing.JPanel();
		m_jImage = new com.openbravo.data.gui.JImageEditor(m_App);

		setLayout(new java.awt.BorderLayout());

		// jPanel1.setPreferredSize(new java.awt.Dimension(150, 100));
		GridBagLayout gbl_panel = new GridBagLayout();
		gbl_panel.columnWeights = new double[] { 0.0, 1.0, 0.0 };
		gbl_panel.rowWeights = new double[] { 0.0, };
		jPanel1.setLayout(gbl_panel);

		jLabel3.setText(AppLocal.getIntString("Label.Name")); // NOI18N
		GridBagConstraints lbl1 = new GridBagConstraints();
		lbl1.anchor = GridBagConstraints.WEST;
		lbl1.insets = new Insets(5,5,0,0);
		lbl1.gridx = 0;
		lbl1.gridy = 0;
		jPanel1.add(jLabel3, lbl1);

		GridBagConstraints gbc_textPane = new GridBagConstraints();
		gbc_textPane.fill = GridBagConstraints.HORIZONTAL;
		gbc_textPane.insets = new Insets(5,5,0,0);
		gbc_textPane.weightx = 1.0;
		gbc_textPane.gridx = 1;
		gbc_textPane.gridy = 0;
		jPanel1.add(m_jName, gbc_textPane);

		JLabel lblSpace1 = new JLabel("");
		GridBagConstraints gbc_space1 = new GridBagConstraints();
		gbc_space1.insets = new Insets(5,5,0,0);
		gbc_space1.weightx = 1.0;
		gbc_space1.gridx = 2;
		gbc_space1.gridy = 0;
		jPanel1.add(lblSpace1, gbc_space1);
		
		JLabel lblSpace2 = new JLabel("");
		GridBagConstraints gbc_space2 = new GridBagConstraints();
		gbc_space2.insets = new Insets(5,5,0,0);
		gbc_space2.gridx = 0;
		gbc_space2.gridy = 1;
		jPanel1.add(lblSpace2, gbc_space2);

		add(jPanel1, java.awt.BorderLayout.NORTH);

		jPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 0, 0));
		jPanel3.setLayout(new java.awt.BorderLayout());
		jPanel3.add(m_jImage, java.awt.BorderLayout.CENTER);

		add(jPanel3, java.awt.BorderLayout.CENTER);
	}// </editor-fold>//GEN-END:initComponents

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel jLabel3;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel3;
	private com.openbravo.data.gui.JImageEditor m_jImage;
	private javax.swing.JTextField m_jName;
	// End of variables declaration//GEN-END:variables

	@Override
	public void ScaleButtons() {
		PropertyUtil.ScaleLabelFontsize(m_App, jLabel3, "common-small-fontsize", "32");

		PropertyUtil.ScaleTextFieldFontsize(m_App, m_jName, "common-small-fontsize", "32");
	}

	@Override
	public void sortEditor(BrowsableEditableData bd) {

	}
}
